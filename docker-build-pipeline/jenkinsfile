pipeline {
    agent any
    tools{
        maven '3.9.5'
//       'org.jenkinsci.plugins.docker.commons.tools.DockerTool' 'docker'
    }

    stages {
        stage('Clean') {
            steps {
                // Clean the workspace
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
                // Pull code from GitHub
                git branch: 'master', changelog: false, poll: false, url: 'https://github.com/Rick0038/Experiments.git'
            }
        }

        stage('Compile') {
            steps {
                // Compile the code
                dir('docker-build-pipeline'){
                    sh 'ls'
                    sh 'mvn compile'
                }
            }
        }

        stage('Package') {
            steps {
                // Package the code into a .war file
                dir('docker-build-pipeline'){
                    sh 'ls'
                    sh 'mvn package'
                } 
            }
        }

        stage('Build Docker image') {
            steps {
                // Build Docker image
               dir('docker-build-pipeline'){
                    sh 'ls'
                    sh 'docker build -t ereshkigal/pocjava-test-docker-image .'
                }  
            }
        }

        stage('Push Docker image') {
            steps {
                // Login to Docker Hub
                echo "Docker login"
                //sh 'docker login -u your-dockerhub-username -p your-dockerhub-password'

                // Push Docker image
                echo "Docker push image"
                //sh 'docker push your-dockerhub-username/your-docker-image-name'
            }
        }

        stage('Create Docker container') {
            steps {
                // Create a Docker container
                sh 'docker run -d --name pocjava ereshkigal/pocjava-test-docker-image'
            }
        }
    }
}
